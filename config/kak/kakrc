# Enable the plugin manager
source "%val{config}/plugins/plug.kak/rc/plug.kak"

require-module tmux

# Use git grep
set global grepcmd "git grep -n"

# Configuration for the fzf fuzzy finding tool
plug "andreyorst/fzf.kak"
set global fzf_git_command "git ls-files --recurse-submodules"

# Configure the lsp server
eval %sh{kak-lsp --kakoune -s $kak_session}

hook global WinSetOption filetype=(rust|typescript) %{
    lsp-enable-window
}
lsp-auto-hover-enable
lsp-auto-hover-insert-mode-disable

# Disable the clippy picture
set global ui_options ncurses_assistant=none

# Indentation of 2 spaces
hook global InsertChar \t %{ exec -draft -itersel h@ }
set global tabstop 2
set global indentwidth 2  

# Cut/Copyfrom system clipboard
hook global NormalKey y|d|c %{ nop %sh{
  printf %s "$kak_main_reg_dquote" | xsel --input --clipboard
  }}

# Keys in the user keymap (triggered by ,)
map global user / ': tmux-terminal-horizontal kak -c %val{session} -e "buffer %val{bufname}"<ret>' -docstring 'Split horizontal'
map global user = ': tmux-terminal-vertical kak -c %val{session} -e "buffer %val{bufname}"<ret>' -docstring 'Split vertical'
map global user l ': enter-user-mode lsp<ret>' -docstring 'LSP mode'
map global user f ': fzf-mode<ret>' -docstring 'Fuzzy mode'
map global user p '<a-!>xsel --output --clipboard<ret>' -docstring 'Paste from clipboard (after selection)'
map global user P '!xsel --output --clipboard<ret>' -docstring 'Paste from clipboard (before selection)'
map global user R '<a-d>!xsel --output --clipboard<ret>' -docstring 'Paste from clipboard (replace selection)'
map global user w ': add-highlighter global/wrap wrap<ret>' -docstring 'enable wrapping'
map global user W ': remove-highlighter global/wrap<ret>' -docstring 'disable wrapping'
map global user r ': lsp-rename-prompt<ret>' -docstring 'rename symbol'

# Keys in the goto keymap (triggered by g)
map global goto n '<esc>: lsp-find-error<ret>' -docstring 'next error'
map global goto p '<esc>: lsp-find-error --previous<ret>' -docstring 'previous error'

# Make searches case insensitive by default by adding a flag
# to the regex
map global normal / '/(?i)'  


